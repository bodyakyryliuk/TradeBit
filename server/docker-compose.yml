services:
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservices-network

  keycloak:
    image: jboss/keycloak:16.1.1
    restart: always
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      JAVA_OPTS_APPEND: "-Dkeycloak.profile.feature.upload_scripts=enabled"
    ports:
      - "8180:8080"
    volumes:
      - keycloak_data:/opt/jboss/keycloak/standalone/data
    networks:
      - microservices-network

  identity-service:
    image: bodyakyryliuk/identity-service:v2
#    build:
#      context: .
#      dockerfile : ./identity-service/Dockerfile
    ports:
      - "8085:8085"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      KEYCLOAK_CREDENTIALS_SECRET: DqpDFqcqvNbtzRTTCkYkNahKPDUc8Cyf
    networks:
      - microservices-network

  binance-service:
    #image: bodyakyryliuk/binance-service:v2
    build:
      context: .
      dockerfile: ./binance-service/Dockerfile
    ports:
      - "8086:8086"
    networks:
      - microservices-network

  postgres-custom:
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: postgres
    ports:
      - "5433:5432"
    volumes:
      - my_db_data:/var/lib/postgresql/data
    networks:
      - microservices-network

    image: postgres:latest

  email-service:
    image: bodyakyryliuk/email-service:v2
#    build:
#      context: .
#      dockerfile : ./email/Dockerfile
    ports:
      - "8081:8081"
    networks:
      - microservices-network

  api-gateway:
    image: bodyakyryliuk/api-gateway:v1
#    build:
#      context: .
#      dockerfile: ./api-gateway/Dockerfile
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      - microservices-network

#  amqp:
#    image: bodyakyryliuk/amqp:v1
#    depends_on:
#      - rabbitmq
#    environment:
#      SPRING_RABBITMQ_HOST: rabbitmq
#      SPRING_RABBITMQ_PORT: 5672
#    networks:
#      - microservices-network

  eureka-server:
    image: bodyakyryliuk/eureka-server:v1
    ports:
      - "8761:8761"
    networks:
      - microservices-network

  bot-service:
    image: bodyakyryliuk/bot-service:v3
#    build:
#      context: .
#      dockerfile : ./bot-service/Dockerfile
    ports:
      - "8087:8087"
    networks:
      - microservices-network

networks:
  backend:
    driver: bridge
  microservices-network:
    driver: bridge

volumes:
  my_db_data:
  keycloak_data: