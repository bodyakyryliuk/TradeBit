services:
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservices-network

  keycloak:
    image: jboss/keycloak:16.1.1
    restart: always
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      JAVA_OPTS_APPEND: "-Dkeycloak.profile.feature.upload_scripts=enabled"
    ports:
      - "8180:8080"
    networks:
      - microservices-network

  identity-service:
    image: bodyakyryliuk/identity-service:v1
    ports:
      - "8085:8085"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      KEYCLOAK_CREDENTIALS_SECRET: Tbzz9fXNLoAHXYyQ9mF2uulxhacoCUDz
    networks:
      - microservices-network

  binance-integration:
    image: 74b6e6657d786c81947d8108e9ec1beda85d770ddcb6927bc47a0645f32f8592
    ports:
      - "8086:8086"
    networks:
      - microservices-network

  postgres-custom:
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: postgres
    ports:
      - "5433:5432"
    volumes:
      - my_db_data:/var/lib/postgresql/data
    networks:
      - microservices-network

    image: postgres:latest
  email-service:
    image: bodyakyryliuk/email-service:v1
    ports:
      - "8081:8081"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      - microservices-network

  api-gateway:
    image: bodyakyryliuk/api-gateway:v1
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      - microservices-network

  amqp:
    image: bodyakyryliuk/amqp:v1
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
    networks:
      - microservices-network

  eureka-server:
    image: bodyakyryliuk/eureka-server:v1
    ports:
      - "8761:8761"
    networks:
      - microservices-network

networks:
  backend:
    driver: bridge
  microservices-network:
    driver: bridge

volumes:
  my_db_data: