# Application config
server.port=${SERVER_PORT:8085}
spring.application.name=${SPRING_APPLICATION_NAME:identity-service}

# Database config
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:create-drop}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}

# Eureka
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}
eureka.client.register-with-eureka=${EUREKA_CLIENT_REGISTER_WITH_EUREKA:true}
eureka.client.fetch-registry=${EUREKA_CLIENT_FETCH_REGISTRY:true}

# Keycloak
keycloak.realm=${KEYCLOAK_REALM}
keycloak.auth-server-url=${KEYCLOAK_AUTH_SERVER_URL}
keycloak.resource=${KEYCLOAK_RESOURCE}
keycloak.credentials.secret=${KEYCLOAK_CREDENTIALS_SECRET}
keycloak.host=${KEYCLOAK_HOST}

# OAuth2 Keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}

token.converter.principal-attribute=${TOKEN_CONVERTER_PRINCIPAL_ATTRIBUTE:preferred_username}
token.converter.resource-id=${TOKEN_CONVERTER_RESOURCE_ID:tradebit}
